version: '3.7'
services:
  db:
    container_name: db
    image: postgres
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      - DOCKER=True
      - POSTGRES_USER=user1
      - POSTGRES_PASSWORD=password1
      - POSTGRES_DB=fastapi
    ports:
      - 5432:5432


  api:
    container_name: api
    build: .
    depends_on:
      - db
    volumes:
      - .:/app
    ports:
      - 8081:8080


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - ./pgadmin:/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"


  redis:
    container_name: redis
    image: redis


  celery_worker:
    container_name: celery_worker
    build: .
    # command: celery -A app.celery_worker.celery worker --loglevel=info
    command: celery -A crontab_tasks.tasks worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - api

  celery_beat:
    container_name: celery_beat
    build: .
    # command: celery -A app.celery_worker.celery worker --loglevel=info
    command: celery -A crontab_tasks.tasks beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - api

  # flower:
  #   container_name: flower
  #   build: .
  #   command: celery -A app.celery_worker.celery flower --port=5555
  #   ports:
  #     - 5556:5555
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
  #   depends_on:
  #     - redis
  #     - api
  #     - celery_worker
  
  # redisinsight:
  #   depends_on:
  #     - redis
  #   image: redislabs/redisinsight:latest
  #   ports:
  #     - '8001:8001'

volumes:
  postgres_volume:


